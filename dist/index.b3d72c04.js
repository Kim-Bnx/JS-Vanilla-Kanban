var e={hideModals:function(){document.querySelectorAll(".modal").forEach(e=>e.classList.remove("is-active"))}};const t={makeInDOM:function(e){let t=document.createElement("span");t.dataset.tagId=e.id,t.textContent=e.name,t.style.backgroundColor=e.color,t.classList.add("tag","has-text-white"),document.querySelector(`.box[data-card-id="${e.card_has_tag.card_id}"]`).querySelector(".tags").appendChild(t)},makeInForm:function(e,t){let a=document.createElement("label");a.classList.add("checkbok","is-block"),a.setAttribute("data-tags-id",e.id),a.textContent=e.name;let o=document.createElement("input");o.setAttribute("type","checkbox"),o.setAttribute("name",e.name),o.checked=t,a.prepend(o),document.querySelector("#addTagModal .field").append(a)},showCustomModal:async function(e){let a;let o=e.target.closest(".box"),r=o.dataset.cardId;document.querySelector("#addTagModal").querySelector('[name="id"]').value=r;let n=Array.from(o.querySelectorAll(".tag")).map(e=>parseInt(e.dataset.tagId));try{if((a=await fetch("/tags",{method:"GET"})).ok){let e=await a.json();document.querySelector("#addTagModal .field").innerHTML="",e.forEach(e=>{n.includes(e.id)?t.makeInForm(e,!0):t.makeInForm(e,!1)})}else{let e=await a.json();throw Error(e.error)}}catch(e){alert(e.message)}document.querySelector("#addTagModal").classList.add("is-active")},handleCustomTag:async function(a){let o;a.preventDefault();let r=new FormData(a.target),n={};r.forEach((e,t)=>n[t]=e);let l=document.querySelectorAll('input[type="checkbox"]:checked'),d=[];l.forEach(e=>{let t=e.parentElement.getAttribute("data-tags-id");t&&d.push(parseInt(t,10))});let i={tagsId:JSON.stringify([...d])};try{if((o=await fetch("/cards/"+n.id+"/tags",{method:"PATCH",headers:{accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(i)})).ok){let a=await o.json();document.querySelector(`[data-card-id="${a.id}"] .tags`).innerHTML="",a.tags.forEach(e=>{t.makeInDOM(e,!0)}),e.hideModals()}else{let e=await o.json();throw Error(e.error)}}catch(e){alert(e.message)}}},a={makeInDOM:function(e){let o=document.querySelector("#cardTemplate").content,r=document.importNode(o,!0),n=document.querySelector(`[data-list-id="${e.list_id}"] .panel-block`);r.querySelector(".box").setAttribute("data-card-id",e.id),r.querySelector(".box").setAttribute("data-card-position",e.position),r.querySelector(".card-name").textContent=e.title,r.querySelector('[name="id"]').value=e.id,r.querySelector('[name="title"]').value=e.title,r.querySelector("#editCardButton").addEventListener("click",a.showEditForm),r.querySelector("form").addEventListener("submit",a.handleEdit),r.querySelector("#deleteCardButton").addEventListener("click",a.handleDelete),r.querySelector("#customTagButton").addEventListener("click",t.showCustomModal),n.appendChild(r)},showAddModal:function(e){let t=e.target.closest(".panel"),a=t.querySelectorAll(".box").length,o=t.dataset.listId,r=document.querySelector("#addCardModal");r.querySelector('[name="list_id"]').value=o,r.querySelector('[name="position"]').value=a+1,document.querySelector("#addCardModal").classList.add("is-active")},handleAddForm:async function(t){let o;t.preventDefault();let r=new FormData(t.target),n={};r.forEach((e,t)=>n[t]=e),console.log(n);try{if((o=await fetch("/cards",{method:"POST",headers:{accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(n)}))&&o.ok){let r=await o.json();console.log(r),a.makeInDOM(r),t.target.reset(),e.hideModals()}else{let e=await o.json();throw Error(e.error)}}catch(e){console.log(e),alert(e.message)}},showEditForm:function(e){let t=e.target.closest(".box");t.querySelector(".card-name").classList.add("is-hidden"),t.querySelector(".card-name").nextElementSibling.classList.remove("is-hidden")},handleEdit:async function(e){let t;e.preventDefault();let a=new FormData(e.target),o={};a.forEach((e,t)=>o[t]=e);let r=e.target.closest(".box");try{if((t=await fetch("/cards/"+o.id,{method:"PATCH",headers:{accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(o)})).ok){let e=await t.json();r.querySelector(".card-name").textContent=e.title,r.querySelector("form").classList.add("is-hidden"),r.querySelector(".card-name").classList.remove("is-hidden")}else{let e=await t.json();throw Error(e.error)}}catch(e){alert(e.message)}},handleDelete:async function(e){let t=e.target.closest(".box");if(window.confirm("Are you sure you want to delete this card?")){let e;try{if((e=await fetch("/cards/"+t.dataset.cardId,{method:"DELETE",headers:{"Content-Type":"application/json"}})).ok)t.remove();else{let t=await e.json();throw Error(t.error)}}catch(e){alert(e.message)}}},handleDragCard:function(e){let t=e.from.querySelectorAll(".box");if(a.updateCards(t),e.from===e.to)return;t=e.to.querySelectorAll(".box");let o=e.to.closest(".panel").dataset.listId;a.updateCards(t,o)},updateCards:async function(e,t=null){e.forEach(async(e,a)=>{let o;let r=new FormData;r.set("position",a),t&&r.set("list_id",t);try{o=await fetch("/cards/"+e.dataset.cardId,{method:"PATCH",headers:{accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(Object.fromEntries(r))});let t=await o.json();if(!o.ok)throw t}catch(e){alert("A problem occurred while updating the new list position."),console.error(e)}})}},o={makeInDOM:function(e){let t=document.querySelector("#listTemplate").content,r=document.importNode(t,!0);r.querySelector(".panel").setAttribute("data-list-id",e.id),r.querySelector(".panel").setAttribute("data-list-position",e.position),r.querySelector(".list-name").textContent=e.name,r.querySelector('[name="id"]').value=e.id,r.querySelector('[name="name"]').value=e.name,r.querySelector("#addCardButton").addEventListener("click",a.showAddModal),r.querySelector("h2").addEventListener("dblclick",o.showEditList),r.querySelector("form").addEventListener("submit",o.handleEditForm),r.querySelector("#deleteListButton").addEventListener("click",o.handleDelete);let n=r.querySelector(".panel-block");Sortable.create(n,{group:"list",draggable:".box",onEnd:a.handleDragCard}),document.querySelector(".list-container").appendChild(r)},showAddModal:function(){let e=document.querySelectorAll(".panel").length;document.querySelector("#addListModal").querySelector('[name="position"]').value=e+1,document.querySelector("#addListModal").classList.add("is-active")},handleAddForm:async function(t){let a;t.preventDefault();let r=new FormData(t.target),n={};r.forEach((e,t)=>n[t]=e);try{if((a=await fetch("/lists",{method:"POST",headers:{accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(n)})).ok){let r=await a.json();o.makeInDOM(r);let n=document.querySelector(".list-container");n.scrollTo(n.scrollWidth,0),t.target.reset(),e.hideModals()}else{let e=await a.json();throw Error(e.error)}}catch(e){alert(e.message)}},showEditList:function(e){e.target.classList.add("is-hidden"),e.target.nextElementSibling.classList.remove("is-hidden")},handleEditForm:async function(e){let t;e.preventDefault();let a=new FormData(e.target),o=e.target.closest(".panel");try{if((t=await fetch("/lists/"+o.dataset.listId,{method:"PATCH",headers:{accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({name:a.get("name")})})).ok){let e=await t.json();o.querySelector(".list-name").textContent=e.name,o.querySelector("form").classList.add("is-hidden"),o.querySelector("h2").classList.remove("is-hidden")}else{let e=await t.json();throw Error(e.error)}}catch(e){alert(e.message)}},handleDelete:async function(e){let t=e.target.closest(".panel");if(window.confirm("Are you sure you want to delete this list?")){let e;try{if((e=await fetch("/lists/"+t.dataset.listId,{method:"DELETE",headers:{"Content-Type":"application/json"}})).ok)t.remove();else{let t=await e.json();throw Error(t.error)}}catch(e){alert(e.message)}}},handleDragList:async function(){document.querySelectorAll(".panel").forEach(async(e,t)=>{let a;let o=new FormData;o.set("position",t);try{a=await fetch("/lists/"+e.dataset.listId,{method:"PATCH",headers:{accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(Object.fromEntries(o))});let t=await a.json();if(!a.ok)throw t}catch(e){alert("A problem occurred while updating the new list position."),console.error(e)}})}},r={init:async function(){r.addListeners(),await r.getListFromAPI()},addListeners:function(){document.querySelector("#addListButton").addEventListener("click",o.showAddModal),document.querySelectorAll(".close, .modal-background").forEach(t=>t.addEventListener("click",e.hideModals)),document.querySelector("#addListForm").addEventListener("submit",o.handleAddForm),document.querySelector("#addCardForm").addEventListener("submit",a.handleAddForm),document.querySelector("#addTagForm").addEventListener("submit",t.handleCustomTag)},getListFromAPI:async function(){let e;try{e=await fetch("/lists",{method:"GET"})}catch(e){console.error(e)}e&&e.ok&&(await e.json()).forEach(e=>{o.makeInDOM(e),e.cards.forEach(e=>{a.makeInDOM(e),e.tags.forEach(e=>{t.makeInDOM(e)})});let r=document.querySelector(".list-container");Sortable.create(r,{draggable:".panel",onEnd:o.handleDragList})})}};document.addEventListener("DOMContentLoaded",r.init);
//# sourceMappingURL=index.b3d72c04.js.map
